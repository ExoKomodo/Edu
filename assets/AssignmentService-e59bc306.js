var y=Object.defineProperty;var g=(r,a,e)=>a in r?y(r,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[a]=e;var i=(r,a,e)=>(g(r,typeof a!="symbol"?a+"":a,e),e);import{D as n,H as c,E as w}from"./index-bb143292.js";class A{constructor(){i(this,"objectViewKeys",[{key:"id",kind:"text"}])}make(){return new n({})}static async createAsync(a,e={}){var t;try{return new n(await c.postAsync("assignment",a,e))}catch(s){throw(t=e.toast)==null||t.error(`Failed to create assignment: ${s}`),s}}static async deleteAsync(a,e={}){var t;try{return new n(await c.deleteAsync("assignment",a,e))}catch(s){throw(t=e.toast)==null||t.error(`Failed to delete assignment: ${s}`),s}}static async getAsync(a,e={}){var t;try{return new n(await c.getAsync("assignment",a,e))}catch(s){throw(t=e.toast)==null||t.error(`Failed to get assignment: ${s}`),s}}static async getAllAsync(a={}){var e;try{let t=await c.getAllAsync("assignment",a);return Object.keys(t).forEach(function(s,o){t[s]=new w(t[s])}),t=new Map(Object.entries(t)),t}catch(t){throw(e=a.toast)==null||e.error(`Failed to get all assignments: ${t}`),t}}static async updateAsync(a,e={}){var t;try{return new n(await c.putAsync("assignment",a,e))}catch(s){throw(t=e.toast)==null||t.error(`Failed to update assignment: ${s}`),s}}}export{A};
